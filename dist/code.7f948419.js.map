{"version":3,"sources":["code.js"],"names":["el","document","querySelector","swipedetect","callback","touchsurface","swipedir","startX","startY","distX","distY","threshold","restraint","allowedTime","elapsedTime","startTime","handleswipe","addEventListener","e","touchobj","changedTouches","dist","pageX","pageY","Date","getTime","preventDefault","Math","abs","code","string","concat","console","log","includes","name","getElementById","classList","add","alert","setTimeout","remove"],"mappings":"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","file":"code.7f948419.js","sourceRoot":"..","sourcesContent":[" // Mobile Detection.\n    const el = document.querySelector(\"canvas\");\n\n    function swipedetect(el, callback) {\n      var touchsurface = el,\n        swipedir,\n        startX,\n        startY,\n        distX,\n        distY,\n        threshold = 100, //required min distance traveled to be considered swipe\n        restraint = 150, // maximum distance allowed at the same time in perpendicular direction\n        allowedTime = 300, // maximum time allowed to travel that distance\n        elapsedTime,\n        startTime,\n        handleswipe = callback || function (swipedir) {};\n\n      touchsurface.addEventListener(\n        \"touchstart\",\n        function (e) {\n          var touchobj = e.changedTouches[0];\n          swipedir = \"none\";\n          dist = 0;\n          startX = touchobj.pageX;\n          startY = touchobj.pageY;\n          startTime = new Date().getTime(); // record time when finger first makes contact with surface\n          e.preventDefault();\n        },\n        false\n      );\n\n      touchsurface.addEventListener(\n        \"touchmove\",\n        function (e) {\n          e.preventDefault(); // prevent scrolling when inside DIV\n        },\n        false\n      );\n\n      touchsurface.addEventListener(\n        \"touchend\",\n        function (e) {\n          var touchobj = e.changedTouches[0];\n          distX = touchobj.pageX - startX; // get horizontal dist traveled by finger while in contact with surface\n          distY = touchobj.pageY - startY; // get vertical dist traveled by finger while in contact with surface\n          elapsedTime = new Date().getTime() - startTime; // get time elapsed\n          if (elapsedTime <= allowedTime) {\n            // first condition for awipe met\n            if (\n              Math.abs(distX) >= threshold &&\n              Math.abs(distY) <= restraint\n            ) {\n              // 2nd condition for horizontal swipe met\n              swipedir = distX < 0 ? \"left\" : \"right\"; // if dist traveled is negative, it indicates left swipe\n            } else if (\n              Math.abs(distY) >= threshold &&\n              Math.abs(distX) <= restraint\n            ) {\n              // 2nd condition for vertical swipe met\n              swipedir = distY < 0 ? \"up\" : \"down\"; // if dist traveled is negative, it indicates up swipe\n            }\n          }\n          handleswipe(swipedir);\n          e.preventDefault();\n        },\n        false\n      );\n    }\n\n    let code = \"upupdowndownleftrightleftrightnonenone\";\n    let string = \"\";\n\n    swipedetect(el, function (swipedir) {\n      //  Log swipes and compare to code.\n      string = string.concat(swipedir);\n      console.log(string);\n\n      if (string.includes(code)) {\n        \n        let name = document.getElementById(\"name\");\n       \n        name.classList.add(\"blinking\");\n        alert(\"🌝\");\n        string = \"\";\n        setTimeout(() => {\n          name.classList.remove(\"blinking\");\n        },5000);\n      }\n    });"]}