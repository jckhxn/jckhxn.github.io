{"id":"../../../../node_modules/error-class/index.js","dependencies":[{"name":"/Users/jack/package.json","includedInParent":true,"mtime":1602994159198},{"name":"/Users/jack/node_modules/error-class/package.json","includedInParent":true,"mtime":1602994155602}],"generated":{"js":"'use strict'\n\nvar hasCaptureStackTrace = 'captureStackTrace' in Error\n\nmodule.exports = errorClass\n\n\nfunction errorClass (name) {\n  var ErrorClass\n\n  if (!name || typeof name !== 'string')\n    throw new TypeError('Argument \"name\" must be a non-empty string.')\n\n  // This is basically `eval`, there's no other way to dynamically define a\n  // function name.\n  ErrorClass = function CustomError () {\n    if (!(this instanceof CustomError))\n      return new (CustomError.bind.apply(CustomError,\n        Array.prototype.concat.apply([ null ], arguments)))\n    setupError.apply(this, arguments)\n  }\n\n  ErrorClass.prototype = Object.create(Error.prototype, {\n    constructor: nonEnumerableProperty(ErrorClass),\n    name: nonEnumerableProperty(name)\n  })\n\n  return ErrorClass\n}\n\n\n// Internal function to set up an error.\nfunction setupError (message) {\n  if (hasCaptureStackTrace)\n    // V8 specific method.\n    Error.captureStackTrace(this, this.constructor)\n  else\n    // Generic way to set the error stack trace.\n    Object.defineProperty(this, 'stack',\n      nonEnumerableProperty(Error(message).stack))\n\n  // Use the `+` operator with an empty string to implicitly type cast the\n  // `message` argument into a string.\n  Object.defineProperty(this, 'message',\n    nonEnumerableProperty(message !== void 0 ? '' + message : ''))\n}\n\n\nfunction nonEnumerableProperty (value) {\n  // The field `enumerable` is `false` by default.\n  return {\n    value: value,\n    writable: true,\n    configurable: true\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/error-class/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../node_modules/error-class/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}}],"sources":{"../../../../node_modules/error-class/index.js":"'use strict'\n\nvar hasCaptureStackTrace = 'captureStackTrace' in Error\n\nmodule.exports = errorClass\n\n\nfunction errorClass (name) {\n  var ErrorClass\n\n  if (!name || typeof name !== 'string')\n    throw new TypeError('Argument \"name\" must be a non-empty string.')\n\n  // This is basically `eval`, there's no other way to dynamically define a\n  // function name.\n  ErrorClass = function CustomError () {\n    if (!(this instanceof CustomError))\n      return new (CustomError.bind.apply(CustomError,\n        Array.prototype.concat.apply([ null ], arguments)))\n    setupError.apply(this, arguments)\n  }\n\n  ErrorClass.prototype = Object.create(Error.prototype, {\n    constructor: nonEnumerableProperty(ErrorClass),\n    name: nonEnumerableProperty(name)\n  })\n\n  return ErrorClass\n}\n\n\n// Internal function to set up an error.\nfunction setupError (message) {\n  if (hasCaptureStackTrace)\n    // V8 specific method.\n    Error.captureStackTrace(this, this.constructor)\n  else\n    // Generic way to set the error stack trace.\n    Object.defineProperty(this, 'stack',\n      nonEnumerableProperty(Error(message).stack))\n\n  // Use the `+` operator with an empty string to implicitly type cast the\n  // `message` argument into a string.\n  Object.defineProperty(this, 'message',\n    nonEnumerableProperty(message !== void 0 ? '' + message : ''))\n}\n\n\nfunction nonEnumerableProperty (value) {\n  // The field `enumerable` is `false` by default.\n  return {\n    value: value,\n    writable: true,\n    configurable: true\n  }\n}\n"},"lineCount":57}},"error":null,"hash":"fedd3cf52e80e0664cb27c81cfd527c6","cacheData":{"env":{}}}