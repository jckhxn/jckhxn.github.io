{"id":"../../../../node_modules/fortune/lib/common/clone.js","dependencies":[{"name":"/Users/jack/package.json","includedInParent":true,"mtime":1602994159198},{"name":"/Users/jack/node_modules/fortune/package.json","includedInParent":true,"mtime":1602994155602}],"generated":{"js":"'use strict'\n\n/**\n * A fast deep clone function, which covers mostly serializable objects.\n *\n * @param {*}\n * @return {*}\n */\nmodule.exports = function clone (input) {\n  var output, key, value, isArray\n\n  if (Array.isArray(input)) isArray = true\n  else if (input == null || Object.getPrototypeOf(input) !== Object.prototype)\n    return input\n\n  output = isArray ? [] : {}\n\n  for (key in input) {\n    value = input[key]\n    output[key] = value !== null && value !== undefined &&\n      Object.getPrototypeOf(value) === Object.prototype ||\n      Array.isArray(value) ? clone(value) : value\n  }\n\n  return output\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/clone.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"../../../../node_modules/fortune/lib/common/clone.js":"'use strict'\n\n/**\n * A fast deep clone function, which covers mostly serializable objects.\n *\n * @param {*}\n * @return {*}\n */\nmodule.exports = function clone (input) {\n  var output, key, value, isArray\n\n  if (Array.isArray(input)) isArray = true\n  else if (input == null || Object.getPrototypeOf(input) !== Object.prototype)\n    return input\n\n  output = isArray ? [] : {}\n\n  for (key in input) {\n    value = input[key]\n    output[key] = value !== null && value !== undefined &&\n      Object.getPrototypeOf(value) === Object.prototype ||\n      Array.isArray(value) ? clone(value) : value\n  }\n\n  return output\n}\n"},"lineCount":27}},"error":null,"hash":"eb43fa5cea6faa58d2e40d032de22607","cacheData":{"env":{}}}