{"id":"../../../../node_modules/fortune/lib/common/assign.js","dependencies":[{"name":"/Users/jack/package.json","includedInParent":true,"mtime":1602994159198},{"name":"/Users/jack/node_modules/fortune/package.json","includedInParent":true,"mtime":1602994155602}],"generated":{"js":"'use strict'\n\n/**\n * Like `Object.assign`, but faster and more restricted in what it does.\n *\n * @param {Object} target\n * @return {Object}\n */\nmodule.exports = function assign (target) {\n  var i, j, key, source\n\n  for (i = 1, j = arguments.length; i < j; i++) {\n    source = arguments[i]\n\n    if (source == null) continue\n\n    for (key in source)\n      target[key] = source[key]\n  }\n\n  return target\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/assign.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}}],"sources":{"../../../../node_modules/fortune/lib/common/assign.js":"'use strict'\n\n/**\n * Like `Object.assign`, but faster and more restricted in what it does.\n *\n * @param {Object} target\n * @return {Object}\n */\nmodule.exports = function assign (target) {\n  var i, j, key, source\n\n  for (i = 1, j = arguments.length; i < j; i++) {\n    source = arguments[i]\n\n    if (source == null) continue\n\n    for (key in source)\n      target[key] = source[key]\n  }\n\n  return target\n}\n"},"lineCount":23}},"error":null,"hash":"be1fdad1522777d35d128d4417caeedc","cacheData":{"env":{}}}