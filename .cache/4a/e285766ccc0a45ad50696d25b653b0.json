{"id":"../../../../node_modules/fortune/lib/common/messages/en.js","dependencies":[{"name":"/Users/jack/package.json","includedInParent":true,"mtime":1602994159198},{"name":"/Users/jack/node_modules/fortune/package.json","includedInParent":true,"mtime":1602994155602}],"generated":{"js":"\nmodule.exports = {\n  GenericError: function(d) { return \"An internal error occurred.\"; },\n  MalformedRequest: function(d) { return \"The request was malformed.\"; },\n  InvalidBody: function(d) { return \"The request body is invalid.\"; },\n  SerializerNotFound: function(d) { return \"The serializer for \\\"\" + d.id + \"\\\" does not exist.\"; },\n  InputOnly: function(d) { return \"Input only.\"; },\n  InvalidID: function(d) { return \"An ID is invalid.\"; },\n  DateISO8601: function(d) { return \"Date string must be an ISO 8601 formatted string.\"; },\n  DateInvalid: function(d) { return \"Date value is invalid.\"; },\n  BufferEncoding: function(d) { return \"Buffer value must be a \" + d.bufferEncoding + \"-encoded string.\"; },\n  JSONParse: function(d) { return \"Could not parse value as JSON.\"; },\n  MissingPayload: function(d) { return \"Payload is missing.\"; },\n  SpecifiedIDs: function(d) { return \"IDs should not be specified.\"; },\n  InvalidURL: function(d) { return \"Invalid URL.\"; },\n  RelatedRecordNotFound: function(d) { return \"A related record for the field \\\"\" + d.field + \"\\\" was not found.\"; },\n  CreateRecordsInvalid: function(d) { return \"There are no valid records to be created.\"; },\n  CreateRecordsFail: function(d) { return \"Records could not be created.\"; },\n  CreateRecordMissingID: function(d) { return \"An ID on a created record is missing.\"; },\n  DeleteRecordsMissingID: function(d) { return \"IDs are required for deleting records.\"; },\n  DeleteRecordsInvalid: function(d) { return \"A record to be deleted could not be found.\"; },\n  DeleteRecordsFail: function(d) { return \"Not all records specified could be deleted.\"; },\n  UnspecifiedType: function(d) { return \"The type is unspecified.\"; },\n  InvalidType: function(d) { return \"The requested type \\\"\" + d.type + \"\\\" is not a valid type.\"; },\n  InvalidLink: function(d) { return \"The field \\\"\" + d.field + \"\\\" does not define a link.\"; },\n  InvalidMethod: function(d) { return \"The method \\\"\" + d.method + \"\\\" is unrecognized.\"; },\n  CollisionToOne: function(d) { return \"Multiple records can not have the same to-one link value on the field \\\"\" + d.field + \"\\\".\"; },\n  CollisionDuplicate: function(d) { return \"Duplicate ID \\\"\" + d.id + \"\\\" in the field \\\"\" + d.field + \"\\\".\"; },\n  UpdateRecordMissing: function(d) { return \"A record to be updated could not be found.\"; },\n  UpdateRecordsInvalid: function(d) { return \"There are no valid updates.\"; },\n  UpdateRecordMissingID: function(d) { return \"An ID on an update is missing.\"; },\n  EnforceArrayType: function(d) { return \"The value of \\\"\" + d.key + \"\\\" is invalid, it must be an array with values of type \\\"\" + d.type + \"\\\".\"; },\n  EnforceArray: function(d) { return \"The value of \\\"\" + d.key + \"\\\" is invalid, it must be an array.\"; },\n  EnforceSameID: function(d) { return \"An ID of \\\"\" + d.key + \"\\\" is invalid, it cannot be the same ID of the record.\"; },\n  EnforceSingular: function(d) { return \"The value of \\\"\" + d.key + \"\\\" can not be an array, it must be a singular value.\"; },\n  EnforceValue: function(d) { return \"The value of \\\"\" + d.key + \"\\\" is invalid, it must be a \\\"\" + d.type + \"\\\".\"; },\n  EnforceValueArray: function(d) { return \"A value in the array of \\\"\" + d.key + \"\\\" is invalid, it must be a \\\"\" + d.type + \"\\\".\"; },\n  FieldsFormat: function(d) { return \"Fields format is invalid. It may either be inclusive or exclusive, but not both.\"; },\n  RecordExists: function(d) { return \"A record with ID \\\"\" + d.id + \"\\\" already exists.\"; }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/messages/en.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"../../../../node_modules/fortune/lib/common/messages/en.js":"\nmodule.exports = {\n  GenericError: function(d) { return \"An internal error occurred.\"; },\n  MalformedRequest: function(d) { return \"The request was malformed.\"; },\n  InvalidBody: function(d) { return \"The request body is invalid.\"; },\n  SerializerNotFound: function(d) { return \"The serializer for \\\"\" + d.id + \"\\\" does not exist.\"; },\n  InputOnly: function(d) { return \"Input only.\"; },\n  InvalidID: function(d) { return \"An ID is invalid.\"; },\n  DateISO8601: function(d) { return \"Date string must be an ISO 8601 formatted string.\"; },\n  DateInvalid: function(d) { return \"Date value is invalid.\"; },\n  BufferEncoding: function(d) { return \"Buffer value must be a \" + d.bufferEncoding + \"-encoded string.\"; },\n  JSONParse: function(d) { return \"Could not parse value as JSON.\"; },\n  MissingPayload: function(d) { return \"Payload is missing.\"; },\n  SpecifiedIDs: function(d) { return \"IDs should not be specified.\"; },\n  InvalidURL: function(d) { return \"Invalid URL.\"; },\n  RelatedRecordNotFound: function(d) { return \"A related record for the field \\\"\" + d.field + \"\\\" was not found.\"; },\n  CreateRecordsInvalid: function(d) { return \"There are no valid records to be created.\"; },\n  CreateRecordsFail: function(d) { return \"Records could not be created.\"; },\n  CreateRecordMissingID: function(d) { return \"An ID on a created record is missing.\"; },\n  DeleteRecordsMissingID: function(d) { return \"IDs are required for deleting records.\"; },\n  DeleteRecordsInvalid: function(d) { return \"A record to be deleted could not be found.\"; },\n  DeleteRecordsFail: function(d) { return \"Not all records specified could be deleted.\"; },\n  UnspecifiedType: function(d) { return \"The type is unspecified.\"; },\n  InvalidType: function(d) { return \"The requested type \\\"\" + d.type + \"\\\" is not a valid type.\"; },\n  InvalidLink: function(d) { return \"The field \\\"\" + d.field + \"\\\" does not define a link.\"; },\n  InvalidMethod: function(d) { return \"The method \\\"\" + d.method + \"\\\" is unrecognized.\"; },\n  CollisionToOne: function(d) { return \"Multiple records can not have the same to-one link value on the field \\\"\" + d.field + \"\\\".\"; },\n  CollisionDuplicate: function(d) { return \"Duplicate ID \\\"\" + d.id + \"\\\" in the field \\\"\" + d.field + \"\\\".\"; },\n  UpdateRecordMissing: function(d) { return \"A record to be updated could not be found.\"; },\n  UpdateRecordsInvalid: function(d) { return \"There are no valid updates.\"; },\n  UpdateRecordMissingID: function(d) { return \"An ID on an update is missing.\"; },\n  EnforceArrayType: function(d) { return \"The value of \\\"\" + d.key + \"\\\" is invalid, it must be an array with values of type \\\"\" + d.type + \"\\\".\"; },\n  EnforceArray: function(d) { return \"The value of \\\"\" + d.key + \"\\\" is invalid, it must be an array.\"; },\n  EnforceSameID: function(d) { return \"An ID of \\\"\" + d.key + \"\\\" is invalid, it cannot be the same ID of the record.\"; },\n  EnforceSingular: function(d) { return \"The value of \\\"\" + d.key + \"\\\" can not be an array, it must be a singular value.\"; },\n  EnforceValue: function(d) { return \"The value of \\\"\" + d.key + \"\\\" is invalid, it must be a \\\"\" + d.type + \"\\\".\"; },\n  EnforceValueArray: function(d) { return \"A value in the array of \\\"\" + d.key + \"\\\" is invalid, it must be a \\\"\" + d.type + \"\\\".\"; },\n  FieldsFormat: function(d) { return \"Fields format is invalid. It may either be inclusive or exclusive, but not both.\"; },\n  RecordExists: function(d) { return \"A record with ID \\\"\" + d.id + \"\\\" already exists.\"; }\n}\n"},"lineCount":41}},"error":null,"hash":"b4d83e67dbf89365f84d1512e55687fa","cacheData":{"env":{}}}