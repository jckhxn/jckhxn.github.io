{"id":"../../../../node_modules/fortune/lib/record_type/validate.js","dependencies":[{"name":"/Users/jack/package.json","includedInParent":true,"mtime":1602994159198},{"name":"/Users/jack/node_modules/fortune/package.json","includedInParent":true,"mtime":1602994155602},{"name":"../common/array/find","loc":{"line":3,"column":19},"parent":"/Users/jack/node_modules/fortune/lib/record_type/validate.js","resolved":"/Users/jack/node_modules/fortune/lib/common/array/find.js"},{"name":"../common/array/map","loc":{"line":4,"column":18},"parent":"/Users/jack/node_modules/fortune/lib/record_type/validate.js","resolved":"/Users/jack/node_modules/fortune/lib/common/array/map.js"},{"name":"../common/keys","loc":{"line":6,"column":19},"parent":"/Users/jack/node_modules/fortune/lib/record_type/validate.js","resolved":"/Users/jack/node_modules/fortune/lib/common/keys.js"},{"name":"buffer","parent":"/Users/jack/node_modules/fortune/lib/record_type/validate.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\n\nvar find = require('../common/array/find')\nvar map = require('../common/array/map')\n\nvar keys = require('../common/keys')\nvar primaryKey = keys.primary\nvar typeKey = keys.type\nvar linkKey = keys.link\nvar inverseKey = keys.inverse\nvar isArrayKey = keys.isArray\n\nvar plainObject = {}\nvar nativeTypes = [ String, Number, Boolean, Date, Object, Buffer ]\nvar stringifiedTypes = map(nativeTypes, function (nativeType) {\n  return nativeType.name.toLowerCase()\n})\n\n\n/**\n * Given a hash of field definitions, validate that the definitions are in the\n * correct format.\n *\n * @param {Object} fields\n * @return {Object}\n */\nmodule.exports = function validate (fields) {\n  var key\n\n  if (typeof fields !== 'object')\n    throw new TypeError('Type definition must be an object.')\n\n  for (key in fields) validateField(fields, key)\n\n  return fields\n}\n\n\n/**\n * Parse a field definition.\n *\n * @param {Object} fields\n * @param {String} key\n */\nfunction validateField (fields, key) {\n  var value = fields[key] = castShorthand(fields[key])\n\n  if (typeof value !== 'object')\n    throw new TypeError('The definition of \"' + key + '\" must be an object.')\n\n  if (key === primaryKey)\n    throw new Error('Can not define primary key \"' + primaryKey + '\".')\n\n  if (key in plainObject)\n    throw new Error('Can not define field name \"' + key +\n      '\" which is in Object.prototype.')\n\n  if (!value[typeKey] && !value[linkKey])\n    throw new Error('The definition of \"' + key + '\" must contain either ' +\n      'the \"' + typeKey + '\" or \"' + linkKey + '\" property.')\n\n  if (value[typeKey] && value[linkKey])\n    throw new Error('Can not define both \"' + typeKey + '\" and \"' + linkKey +\n      '\" on \"' + key + '\".')\n\n  if (value[typeKey]) {\n    if (typeof value[typeKey] === 'string')\n      value[typeKey] = nativeTypes[\n        stringifiedTypes.indexOf(value[typeKey].toLowerCase())]\n\n    if (typeof value[typeKey] !== 'function')\n      throw new Error('The \"' + typeKey + '\" on \"' + key +\n        '\" must be a function.')\n\n    if (!find(nativeTypes, function (type) {\n      var hasMatch = type === value[typeKey] ||\n        type.name === value[typeKey].name\n\n      // In case this errors due to security sandboxing, just skip this check.\n      if (!hasMatch)\n        try {\n          hasMatch = Object.create(value[typeKey]) instanceof type\n        }\n        catch (e) {\n          hasMatch = true\n        }\n\n      return hasMatch\n    }))\n      throw new Error('The \"' + typeKey + '\" on \"' + key + '\" must be or ' +\n        'inherit from a valid native type.')\n\n    if (value[inverseKey])\n      throw new Error('The field \"' + inverseKey + '\" may not be defined ' +\n        'on \"' + key + '\".')\n  }\n\n  if (value[linkKey]) {\n    if (typeof value[linkKey] !== 'string')\n      throw new TypeError('The \"' + linkKey + '\" on \"' + key +\n        '\" must be a string.')\n\n    if (value[inverseKey] && typeof value[inverseKey] !== 'string')\n      throw new TypeError('The \"' + inverseKey + '\" on \"' + key + '\" ' +\n        'must be a string.')\n  }\n\n  if (value[isArrayKey] && typeof value[isArrayKey] !== 'boolean')\n    throw new TypeError('The key \"' + isArrayKey + '\" on \"' + key + '\" ' +\n        'must be a boolean.')\n}\n\n\n/**\n * Cast shorthand definition to standard definition.\n *\n * @param {*} value\n * @return {Object}\n */\nfunction castShorthand (value) {\n  var obj\n\n  if (typeof value === 'string') obj = { link: value }\n  else if (typeof value === 'function') obj = { type: value }\n  else if (Array.isArray(value)) {\n    obj = {}\n\n    if (value[1]) obj.inverse = value[1]\n    else obj.isArray = true\n\n    // Extract type or link.\n    if (Array.isArray(value[0])) {\n      obj.isArray = true\n      value = value[0][0]\n    }\n    else value = value[0]\n\n    if (typeof value === 'string') obj.link = value\n    else if (typeof value === 'function') obj.type = value\n  }\n  else return value\n\n  return obj\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../../node_modules/fortune/lib/record_type/validate.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}}],"sources":{"../../../../node_modules/fortune/lib/record_type/validate.js":"'use strict'\n\nvar find = require('../common/array/find')\nvar map = require('../common/array/map')\n\nvar keys = require('../common/keys')\nvar primaryKey = keys.primary\nvar typeKey = keys.type\nvar linkKey = keys.link\nvar inverseKey = keys.inverse\nvar isArrayKey = keys.isArray\n\nvar plainObject = {}\nvar nativeTypes = [ String, Number, Boolean, Date, Object, Buffer ]\nvar stringifiedTypes = map(nativeTypes, function (nativeType) {\n  return nativeType.name.toLowerCase()\n})\n\n\n/**\n * Given a hash of field definitions, validate that the definitions are in the\n * correct format.\n *\n * @param {Object} fields\n * @return {Object}\n */\nmodule.exports = function validate (fields) {\n  var key\n\n  if (typeof fields !== 'object')\n    throw new TypeError('Type definition must be an object.')\n\n  for (key in fields) validateField(fields, key)\n\n  return fields\n}\n\n\n/**\n * Parse a field definition.\n *\n * @param {Object} fields\n * @param {String} key\n */\nfunction validateField (fields, key) {\n  var value = fields[key] = castShorthand(fields[key])\n\n  if (typeof value !== 'object')\n    throw new TypeError('The definition of \"' + key + '\" must be an object.')\n\n  if (key === primaryKey)\n    throw new Error('Can not define primary key \"' + primaryKey + '\".')\n\n  if (key in plainObject)\n    throw new Error('Can not define field name \"' + key +\n      '\" which is in Object.prototype.')\n\n  if (!value[typeKey] && !value[linkKey])\n    throw new Error('The definition of \"' + key + '\" must contain either ' +\n      'the \"' + typeKey + '\" or \"' + linkKey + '\" property.')\n\n  if (value[typeKey] && value[linkKey])\n    throw new Error('Can not define both \"' + typeKey + '\" and \"' + linkKey +\n      '\" on \"' + key + '\".')\n\n  if (value[typeKey]) {\n    if (typeof value[typeKey] === 'string')\n      value[typeKey] = nativeTypes[\n        stringifiedTypes.indexOf(value[typeKey].toLowerCase())]\n\n    if (typeof value[typeKey] !== 'function')\n      throw new Error('The \"' + typeKey + '\" on \"' + key +\n        '\" must be a function.')\n\n    if (!find(nativeTypes, function (type) {\n      var hasMatch = type === value[typeKey] ||\n        type.name === value[typeKey].name\n\n      // In case this errors due to security sandboxing, just skip this check.\n      if (!hasMatch)\n        try {\n          hasMatch = Object.create(value[typeKey]) instanceof type\n        }\n        catch (e) {\n          hasMatch = true\n        }\n\n      return hasMatch\n    }))\n      throw new Error('The \"' + typeKey + '\" on \"' + key + '\" must be or ' +\n        'inherit from a valid native type.')\n\n    if (value[inverseKey])\n      throw new Error('The field \"' + inverseKey + '\" may not be defined ' +\n        'on \"' + key + '\".')\n  }\n\n  if (value[linkKey]) {\n    if (typeof value[linkKey] !== 'string')\n      throw new TypeError('The \"' + linkKey + '\" on \"' + key +\n        '\" must be a string.')\n\n    if (value[inverseKey] && typeof value[inverseKey] !== 'string')\n      throw new TypeError('The \"' + inverseKey + '\" on \"' + key + '\" ' +\n        'must be a string.')\n  }\n\n  if (value[isArrayKey] && typeof value[isArrayKey] !== 'boolean')\n    throw new TypeError('The key \"' + isArrayKey + '\" on \"' + key + '\" ' +\n        'must be a boolean.')\n}\n\n\n/**\n * Cast shorthand definition to standard definition.\n *\n * @param {*} value\n * @return {Object}\n */\nfunction castShorthand (value) {\n  var obj\n\n  if (typeof value === 'string') obj = { link: value }\n  else if (typeof value === 'function') obj = { type: value }\n  else if (Array.isArray(value)) {\n    obj = {}\n\n    if (value[1]) obj.inverse = value[1]\n    else obj.isArray = true\n\n    // Extract type or link.\n    if (Array.isArray(value[0])) {\n      obj.isArray = true\n      value = value[0][0]\n    }\n    else value = value[0]\n\n    if (typeof value === 'string') obj.link = value\n    else if (typeof value === 'function') obj.type = value\n  }\n  else return value\n\n  return obj\n}\n"},"lineCount":146}},"error":null,"hash":"9aff2245fe44e6a75a34f829df0d58f2","cacheData":{"env":{}}}