{"id":"../../../../node_modules/fortune/lib/common/cast_value.js","dependencies":[{"name":"/Users/jack/package.json","includedInParent":true,"mtime":1602994159198},{"name":"/Users/jack/node_modules/fortune/package.json","includedInParent":true,"mtime":1602994155602},{"name":"./errors","loc":{"line":3,"column":21},"parent":"/Users/jack/node_modules/fortune/lib/common/cast_value.js","resolved":"/Users/jack/node_modules/fortune/lib/common/errors.js"},{"name":"./message","loc":{"line":4,"column":22},"parent":"/Users/jack/node_modules/fortune/lib/common/cast_value.js","resolved":"/Users/jack/node_modules/fortune/lib/common/message.js"},{"name":"./cast_to_number","loc":{"line":5,"column":27},"parent":"/Users/jack/node_modules/fortune/lib/common/cast_value.js","resolved":"/Users/jack/node_modules/fortune/lib/common/cast_to_number.js"},{"name":"buffer","parent":"/Users/jack/node_modules/fortune/lib/common/cast_value.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\n\nvar errors = require('./errors')\nvar message = require('./message')\nvar castToNumber = require('./cast_to_number')\nvar BadRequestError = errors.BadRequestError\nvar buffer = Buffer.from || function (input, encoding) {\n  return new Buffer(input, encoding)\n}\n\n\nvar castByType = [\n  [ Number, function (x) { return parseFloat(x) } ],\n\n  [ Date, function (x, options) {\n    if (typeof x === 'string') {\n      x = Date.parse(x)\n      if (Number.isNaN(x)) throw new BadRequestError(\n        message('DateISO8601', options.language))\n    }\n\n    x = new Date(x)\n    if (Number.isNaN(x.getTime())) throw new BadRequestError(\n      message('DateInvalid', options.language))\n\n    return x\n  } ],\n\n  [ Buffer, function (x, options) {\n    var bufferEncoding = options && options.bufferEncoding ?\n      options.bufferEncoding : 'base64'\n\n    if (typeof x !== 'string') throw new BadRequestError(\n      message('BufferEncoding', options.language, {\n        bufferEncoding: bufferEncoding\n      }))\n\n    return buffer(x, bufferEncoding)\n  } ],\n\n  [ Boolean, function (x) {\n    if (typeof x === 'string')\n      return (/^(?:true|1|yes|t|y)$/i).test(x)\n    return Boolean(x)\n  } ],\n\n  [ Object, function (x, options) {\n    if (typeof x === 'string') return JSON.parse(x)\n    if (typeof x === 'object') return x\n    throw new BadRequestError(message('JSONParse', options.language))\n  } ],\n\n  [ String, function (x) { return '' + x } ]\n]\n\n\n/**\n * Cast a value to the given type. Skip if type is missing or value is null.\n *\n * @param {*} value\n * @param {Function} type - Constructor function.\n * @param {Object} [options]\n * @return {*}\n */\nmodule.exports = function castValue (value, type, options) {\n  var i, j, pair, hasMatch, cast\n\n  // Special case for empty string: it should be null.\n  if (value === '') return null\n\n  if (type)\n    for (i = 0, j = castByType.length; i < j; i++) {\n      pair = castByType[i]\n      hasMatch = pair[0] === type || pair[0].name === type.name\n\n      if (!hasMatch)\n        try {\n          hasMatch = pair[0] === type.prototype.constructor\n        }\n        catch (e) {\n          // Swallow this error.\n        }\n\n      if (hasMatch) {\n        cast = pair[1]\n        break\n      }\n    }\n  else return castToNumber(value)\n\n  return cast && value !== null ? cast(value, options) : value\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../../node_modules/fortune/lib/common/cast_value.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}}],"sources":{"../../../../node_modules/fortune/lib/common/cast_value.js":"'use strict'\n\nvar errors = require('./errors')\nvar message = require('./message')\nvar castToNumber = require('./cast_to_number')\nvar BadRequestError = errors.BadRequestError\nvar buffer = Buffer.from || function (input, encoding) {\n  return new Buffer(input, encoding)\n}\n\n\nvar castByType = [\n  [ Number, function (x) { return parseFloat(x) } ],\n\n  [ Date, function (x, options) {\n    if (typeof x === 'string') {\n      x = Date.parse(x)\n      if (Number.isNaN(x)) throw new BadRequestError(\n        message('DateISO8601', options.language))\n    }\n\n    x = new Date(x)\n    if (Number.isNaN(x.getTime())) throw new BadRequestError(\n      message('DateInvalid', options.language))\n\n    return x\n  } ],\n\n  [ Buffer, function (x, options) {\n    var bufferEncoding = options && options.bufferEncoding ?\n      options.bufferEncoding : 'base64'\n\n    if (typeof x !== 'string') throw new BadRequestError(\n      message('BufferEncoding', options.language, {\n        bufferEncoding: bufferEncoding\n      }))\n\n    return buffer(x, bufferEncoding)\n  } ],\n\n  [ Boolean, function (x) {\n    if (typeof x === 'string')\n      return (/^(?:true|1|yes|t|y)$/i).test(x)\n    return Boolean(x)\n  } ],\n\n  [ Object, function (x, options) {\n    if (typeof x === 'string') return JSON.parse(x)\n    if (typeof x === 'object') return x\n    throw new BadRequestError(message('JSONParse', options.language))\n  } ],\n\n  [ String, function (x) { return '' + x } ]\n]\n\n\n/**\n * Cast a value to the given type. Skip if type is missing or value is null.\n *\n * @param {*} value\n * @param {Function} type - Constructor function.\n * @param {Object} [options]\n * @return {*}\n */\nmodule.exports = function castValue (value, type, options) {\n  var i, j, pair, hasMatch, cast\n\n  // Special case for empty string: it should be null.\n  if (value === '') return null\n\n  if (type)\n    for (i = 0, j = castByType.length; i < j; i++) {\n      pair = castByType[i]\n      hasMatch = pair[0] === type || pair[0].name === type.name\n\n      if (!hasMatch)\n        try {\n          hasMatch = pair[0] === type.prototype.constructor\n        }\n        catch (e) {\n          // Swallow this error.\n        }\n\n      if (hasMatch) {\n        cast = pair[1]\n        break\n      }\n    }\n  else return castToNumber(value)\n\n  return cast && value !== null ? cast(value, options) : value\n}\n"},"lineCount":94}},"error":null,"hash":"e980eef587ddbd909dba5715255bc17e","cacheData":{"env":{}}}