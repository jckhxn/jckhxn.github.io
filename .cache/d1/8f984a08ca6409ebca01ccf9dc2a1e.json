{"id":"../../../../node_modules/fortune/lib/request/end.js","dependencies":[{"name":"/Users/jack/package.json","includedInParent":true,"mtime":1602994159198},{"name":"/Users/jack/node_modules/fortune/package.json","includedInParent":true,"mtime":1602994155602},{"name":"../common/array/map","loc":{"line":3,"column":18},"parent":"/Users/jack/node_modules/fortune/lib/request/end.js","resolved":"/Users/jack/node_modules/fortune/lib/common/array/map.js"},{"name":"../common/promise","loc":{"line":4,"column":22},"parent":"/Users/jack/node_modules/fortune/lib/request/end.js","resolved":"/Users/jack/node_modules/fortune/lib/common/promise.js"}],"generated":{"js":"'use strict'\n\nvar map = require('../common/array/map')\nvar promise = require('../common/promise')\n\n\n/**\n * Apply `output` hook per record, this mutates `context.response`.\n *\n * @return {Promise}\n */\nmodule.exports = function (context) {\n  var Promise = promise.Promise\n  var hooks = this.hooks\n  var request = context.request\n  var response = context.response\n  var type = request.type\n  var hook = hooks[type]\n  var records = response.records\n  var include = response.include\n\n  // Run hooks on primary type.\n  return (records ? Promise.all(map(records, function (record) {\n    return Promise.resolve(typeof hook[1] === 'function' ?\n      hook[1](context, record) : record)\n  }))\n\n    .then(function (updatedRecords) {\n      var includeTypes\n      var i, j\n\n      for (i = 0, j = updatedRecords.length; i < j; i++)\n        if (updatedRecords[i]) records[i] = updatedRecords[i]\n\n      if (!include) return void 0\n\n      // The order of the keys and their corresponding indices matter.\n      includeTypes = Object.keys(include)\n\n      // Run output hooks per include type.\n      return Promise.all(map(includeTypes, function (includeType) {\n        // This is useful for output hooks to know which type that the current\n        // record belongs to. It is temporary and gets deleted later.\n        request.includeType = includeType\n\n        return Promise.all(map(include[includeType], function (record) {\n          return Promise.resolve(\n            typeof hooks[includeType][1] === 'function' ?\n              hooks[includeType][1](context, record) : record)\n        }))\n      }))\n\n        .then(function (types) {\n          var i, j, k, l\n\n          // Don't need this anymore.\n          delete request.includeType\n\n          // Assign results of output hooks on includes.\n          for (i = 0, j = types.length; i < j; i++)\n            for (k = 0, l = types[i].length; k < l; k++)\n              if (types[i][k]) include[includeTypes[i]][k] = types[i][k]\n        })\n    }) : Promise.resolve())\n\n    .then(function () {\n      // Delete temporary keys, these should not be serialized.\n      delete response.records\n      delete response.include\n\n      context.response.payload = {\n        records: records\n      }\n\n      if (include) context.response.payload.include = include\n\n      // Expose the \"count\" property so that it is serializable.\n      if (records && 'count' in records)\n        context.response.payload.count = records.count\n\n      return context\n    })\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../../node_modules/fortune/lib/request/end.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}}],"sources":{"../../../../node_modules/fortune/lib/request/end.js":"'use strict'\n\nvar map = require('../common/array/map')\nvar promise = require('../common/promise')\n\n\n/**\n * Apply `output` hook per record, this mutates `context.response`.\n *\n * @return {Promise}\n */\nmodule.exports = function (context) {\n  var Promise = promise.Promise\n  var hooks = this.hooks\n  var request = context.request\n  var response = context.response\n  var type = request.type\n  var hook = hooks[type]\n  var records = response.records\n  var include = response.include\n\n  // Run hooks on primary type.\n  return (records ? Promise.all(map(records, function (record) {\n    return Promise.resolve(typeof hook[1] === 'function' ?\n      hook[1](context, record) : record)\n  }))\n\n    .then(function (updatedRecords) {\n      var includeTypes\n      var i, j\n\n      for (i = 0, j = updatedRecords.length; i < j; i++)\n        if (updatedRecords[i]) records[i] = updatedRecords[i]\n\n      if (!include) return void 0\n\n      // The order of the keys and their corresponding indices matter.\n      includeTypes = Object.keys(include)\n\n      // Run output hooks per include type.\n      return Promise.all(map(includeTypes, function (includeType) {\n        // This is useful for output hooks to know which type that the current\n        // record belongs to. It is temporary and gets deleted later.\n        request.includeType = includeType\n\n        return Promise.all(map(include[includeType], function (record) {\n          return Promise.resolve(\n            typeof hooks[includeType][1] === 'function' ?\n              hooks[includeType][1](context, record) : record)\n        }))\n      }))\n\n        .then(function (types) {\n          var i, j, k, l\n\n          // Don't need this anymore.\n          delete request.includeType\n\n          // Assign results of output hooks on includes.\n          for (i = 0, j = types.length; i < j; i++)\n            for (k = 0, l = types[i].length; k < l; k++)\n              if (types[i][k]) include[includeTypes[i]][k] = types[i][k]\n        })\n    }) : Promise.resolve())\n\n    .then(function () {\n      // Delete temporary keys, these should not be serialized.\n      delete response.records\n      delete response.include\n\n      context.response.payload = {\n        records: records\n      }\n\n      if (include) context.response.payload.include = include\n\n      // Expose the \"count\" property so that it is serializable.\n      if (records && 'count' in records)\n        context.response.payload.count = records.count\n\n      return context\n    })\n}\n"},"lineCount":84}},"error":null,"hash":"02b6aef985495f2ff73f1c47ad819503","cacheData":{"env":{}}}